parameters:
  - name: service_connection
    type: string
  - name: working_directory
    type: string
    default: "terraform"
  - name: terraformStateKey
    type: string
  - name: storageAccount
    type: string
  - name: resourceGroup
    type: string
  - name: location
    type: string
    default: 'westeurope'
  - name: containerName
    type: string
  - name: azDoEnvironment
    type: string
  - name: environment
    type: string
  - name: dependsOn
    type: object
    default: []

jobs:
  - deployment: TerraformApply
    displayName: Terraform Apply
    dependsOn: ${{ parameters.dependsOn }}
    environment: ${{ parameters.azDoEnvironment }}
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
              clean: true

            - template: ../task/init.yml
              parameters:
                service_connection: ${{ parameters.service_connection }}
                resourceGroup: ${{ parameters.resourceGroup }}
                storageAccount: ${{ parameters.storageAccount }}
                containerName: ${{ parameters.containerName }}
                terraformStateKey: ${{ parameters.terraformStateKey }}
                working_directory: ${{ parameters.working_directory }}

            - task: DownloadPipelineArtifact@2
              inputs:
                artifactName: terraformPlan-${{ parameters.environment }}
                targetPath: $(Build.Repository.LocalPath)/${{ parameters.working_directory }}
                buildType: 'current'

            - task: TerraformCLI@0
              displayName: Terraform apply
              inputs:
                command: apply
                environmentServiceName: ${{ parameters.service_connection }}
                workingDirectory: "$(System.DefaultWorkingDirectory)/${{ parameters.working_directory }}"
                runAzLogin: true
                commandOptions: -input=false ${{parameters.environment}}-tf.plan